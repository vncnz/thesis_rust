// Cargo.toml
// [dependencies]
// rand = "0.8"

/* use std::collections::HashMap;
use rand::Rng;

fn create_large_dict(size: usize) -> HashMap<usize, i32> {
    let mut dict = HashMap::with_capacity(size);
    let mut rng = rand::thread_rng();
    for i in 0..size {
        dict.insert(i, rng.gen_range(1..=1000));
    }
    dict
}

fn manipulate_dict(d: &HashMap<usize, i32>) -> (i32, i32, HashMap<usize, i32>) {
    // Somma tutti i valori
    let total_sum: i32 = d.values().sum();

    // Trova il massimo
    let max_value = *d.values().max().unwrap();

    // Eleva ogni valore al quadrato
    let squared_dict: HashMap<usize, i32> = d.iter().map(|(&k, &v)| (k, v * v)).collect();

    (total_sum, max_value, squared_dict)
}

fn main() {
    let size = 10_000_000;  // Numero di chiavi nel dizionario
    let large_dict1 = create_large_dict(size);
    let large_dict2 = create_large_dict(size);
    let large_dict3 = create_large_dict(size);
    let _results1 = manipulate_dict(&large_dict1);
    let _results2 = manipulate_dict(&large_dict2);
    let _results3 = manipulate_dict(&large_dict3);
    println!("Done");
}

    // let x = String::from("ACCTCGAAAATTTCCGCGCGGGCTTTTAGCCGAGCTATGCAAAAAGAGGCATGCTACTAGCATCGTATATATTTTTTTAGACTAAAAAAGAGGCATGCTAGCATATATAAAAAAACATCGTATATATTTTTTATGACGATGCATGCATGCATATCGTATATATTTTTTTAAAAAATCGTAGCTAGCTAGCATCGAAAAAGAGGCATGCTAATCGTACGCTACATACGGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAAGAAAAAGAGGCATGCTATAAAATCGAAAAAGAGGCATGCTATATATATTTTTTAAAAAACCCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCTATCGTATATATTTTTTAAATTATATACGTGCTCGTCGGGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCTAAGATCGTATATATTTTTTACGATGCATGCATGCATTAAAAAATCGTAGCTAGCCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGAAAGGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAAAAAGAGGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGGCATGCTACCC"); //CCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTCAAAAAGAGGCATGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCTGGCATGCTATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTGCTAGGGGCTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTATGCTAGGGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAGCATGCTACCCCCAAAGAGGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCAAAAAGAGGCATGCTAGGCAAAGAGGCATGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCGGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCACGGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAATAAAAACCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCTATTTTACGGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTACGGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCAAAAAGAGGCATGCTACCCAAAAAGAGGCATGCTATAGCATCGTATATAGCTAGCATTAAAAAGAGGCATGCTAATAAAAAGAGGCATGCTAATCGTATATATTTTTTATATATGACTAGTCTAGTTTTTAACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTATTTGGGGGAAAGAGAGATCGTATATATTTTTTAGAGAAAACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCTTTATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATTTTTATCCCCCCCCAAAAAGAGGCATGCTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATACGGGGGGCATCCCCCCCTTTTTTTTAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATACTAGCATCGTATATATTTTTTTAATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATACCCCCCAAAAAGAGGCATGCGACTAGCATAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGGCTAGGGGGATCGTATATATTTTTTTTTATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCTAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCTCGATCGTATATATTATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCTTTTATCTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATACGATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATAATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTCAAAAAGAGGCATGCTCGGACGACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCTGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAAAAAAAGAGGCATGCTAAGAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATAGGCATGCTAGTACATCGGGGGGGAAAAAATAGACGATGCATGCATGCATTATCGTATATATTTTTTAAAAAATCGTAGCTAGCTAGCATCGTATATATTTTTTTAGACTAGCATATCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAATAAAAAAACATGACGATGCATGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGACGGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGCATCCCCCCCCTAGCTAGTAAAAAAAACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAAAAAAGAGGCATGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAAACATGACGATGCATGCATGCATTAAAAAGAGGCATGCTAAAAAAATCGTAGCTAGCTAGCATCGATAAAAAGAGGCATGCTACGTACAAAAAGAGGCATGCTAGGGGGGCATCCCCCCCCTAGCTAGTAAAATCGTATATATTTTTTAAAAAACCCCCCCCCCCCCCCCCCCCCCCCTTTTTTTTTTATCGTATATATTTTTTTTTTTTTAAAAAAAAAAAAGAGGCATGCTAAAAAAAAAAAAAAAAAAAAAAAAGCGGACGATGCATATCGTATATATTTTTTGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGGCGCGCGCGCG";

    // let y = String::from("ACCTCGAAAATTTCCGCGCGGGCTTTTAGCCGAGCAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGTATGCCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAAACATGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCCCCCCCCCCCCCCTAAATTATATACGTGCTCGTCGTAAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGTATATAGCTAGCATTATATATATGACTAGTCTAGTTTTTTTTGGGGGAAAGAGAGAGAGAAAAAAGAGGCATGCTAGTACATCGGGATCGTATATATTTTTTGAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGGGGAAAAAATAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTTATATATTTTTTTAGACTAGCATATATAAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGAAAAAACATGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGAAACCCCCCCCCCCCCCCCCCCCCCAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGAGCTAGCATCGCCCCCCCCCCCCGGGGGGGGGGGGAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGGGGGGGGGTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAAACATGACGATGCATGCATGCATTAAAAAATCGTAGCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAC"); //TACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTTAGCTAGCATCGATCGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCAGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCCCCCCCCCCCCCCTTTTTTTTTTTTTTTTTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCCAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGCATGCTACCCCCCCCGGAAAAAGAGGCATGCTAGGGGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCATTTTTTTAGACTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGGGGGGGGGAAAAAGAGGCATGCTAGGGGGATCGTATATATTTTTTTTTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAAAAAAAAGAGGCATGCTAAGAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATAGGCATGCTAGTACATCGGGGGGGAAAAAATAGACGATGCATGCATGCATTATCGTATATATTTTTTAAAAAATCGTAGCTAGCTAGCATCGTATATACAAAAAGAGGCATGCTCGGACGATGCATGCATGCATTAAAAAATCGTAGCTAGCTAGCATCGCGGGCGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAGGGGGCATCCCCCCCCTAGCTAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCAAATCGTAGCTAGCTAGCATCGTTTTTATCTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCTTTTTTTAGACTAGCATATCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAATAAAAAAACATGACGATGCATGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGACGGGGGGCATCCCCCCCTTTTTTTTCTAGCATCGTATATATTTTTTTAGACTAGCATATATAAAAACCCCCCCCCCCAAAAAGAGGCATGCTAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGAGGCATGCTAAAAAAGAGGCATGCTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAAAACCCCCCCCCCCAAAAAGAGGCATGCTACCCCCCCCCCCCCCCAAAAAGACTACATGCATTAAAAAATCGTAGCTAGCTAGCATCGATCGTATATATTTTTTATCAAAAAGAGGCATGCTAGTACGGGGGGCATCCCCCCCCTAGCTAGTAAAAAAGGCGCGCGCGCG";
 */

 use std::collections::HashMap;

fn print_hash_map(map: &HashMap<usize, TreeNode>) {
    for (key, value) in &*map {
        println!("{} / {:?}", &key, &value);
    }
    // map.clear();
}

 #[derive(Debug)]
 struct TreeNode {
    pos: usize,
    parent: usize,
    children: [usize; 3],
    depth: u32
 }

 fn create_node(w: usize, parent: usize, tree: &HashMap<usize, TreeNode>) -> TreeNode {
    println!("{}, child of {}", w, &parent);
    let d = tree[&parent].depth;
    // TODO: mettere questo nuovo nodo sul parent
    TreeNode {
        pos: w,
        parent: parent,
        children: [0,0,0],
        depth: d + 1
    }
 }

 fn two_rows_alignment(seq1: &str, seq2: &str, match_score: i32, mismatch: i32, gap: i32) -> (i32, usize, usize) {
    let m = seq1.len();
    let n = seq2.len();
    let m1 = m + 1;
    let n1 = n + 1;

    // Inizializza la tabella DP. Si tratta delle due righe che nella versione py erano chiamate row_a e row_b
    let mut dp = vec![vec![0; n + 1]; 2];

    // Inizializza il punteggio massimo, la sua posizione, il relativo TreeNode
    let mut max_score = 0;
    // let mut max_node: TreeNode = TreeNode { pos: 0, parent: 0, children: [0,0,0], depth: 0};
    let mut max_i = 0;
    let mut max_j = 0;

    // Inizializza il dict
    let mut tree = HashMap::with_capacity(n * 2);
    tree.insert(0, TreeNode {
        pos: 0,
        parent: 0,
        children: [0,0,0],
        depth: 0
    });

    // Inizializza la prima riga
    for j in 1..n1 {
        dp[0][j] = std::cmp::max(0, dp[0][j - 1] + gap);
        let node = create_node(j, j - 1, &tree);
        tree.insert(j, node);
    }

    // Riempie la tabella DP e traccia il punteggio massimo
    for j in 1..n1 {
        dp[1][0] = std::cmp::max(0, dp[0][0] + gap);
        let node = create_node(j*m1, (j - 1)*m1, &tree);
        tree.insert(j*m1, node);


        for i in 1..m1 {
            let w = j*m1 + i;
            let match_mismatch_delta_points = dp[0][j - 1]
                + if seq1.as_bytes()[i - 1] == seq2.as_bytes()[j - 1] { match_score }
                  else { mismatch };

            let delete = dp[0][j] + gap;
            let insert = dp[1][j - 1] + gap;

            let node: TreeNode;
            if match_mismatch_delta_points > delete && match_mismatch_delta_points > insert {
                dp[1][j] = match_mismatch_delta_points;
                node = create_node(w, w - i - 1, &tree);
            } else if delete > insert {
                dp[1][j] = delete;
                node = create_node(w, w - i, &tree);
            } else {
                dp[1][j] = insert;
                node = create_node(w, w - 1, &tree);
            }

            // dp[1][j] = std::cmp::max(match_mismatch_delta_points, std::cmp::max(delete, std::cmp::max(insert, 0)));

            // Traccia il punteggio massimo e la sua posizione
            if dp[1][j] > max_score { // TODO: Andrà spostato per agire solo sull'ultima colonna o riga
                max_score = dp[1][j];
                max_i = i;
                max_j = j;
            }

            tree.insert(w, node);
        }

        // Scambia le righe
        // dp[0].clone_from_slice(&dp[1]);
        dp.swap(0, 1);
    }

    println!("Matrix size {} x {}", m1, n1);

    // let mut node = &tree[&(max_i * n + max_j)];
    println!("{:?}", tree[&(max_i * n + max_j)]);
    /* while node.parent != node.pos {
        node = &tree[&node.parent];
        println!("{:?}", &node);
    } */

    print_hash_map(&tree);

    (max_score, max_i, max_j)
}

fn main() {
    let x = String::from("AGT");
    let y = String::from("ATCGT");


    let (score, max_i, max_j) = two_rows_alignment(&x[0..], &y[0..], 1, -1, -1);

    println!("Alignment Score: {}", score);
    println!("max_i: {}", max_i);
    println!("max_j: {}", max_j);
}

/*

fn dna_to_bytes(seq: &str) -> Vec<u8> {
    seq.chars().map(|c| match c {
        'A' => 0,
        'C' => 1,
        'G' => 2,
        'T' => 3,
        _ => panic!("Invalid character in DNA sequence"),
    }).collect()
}

fn two_rows_alignment(seq1: &[u8], seq2: &[u8], match_score: i32, mismatch: i32, gap: i32) -> (i32, usize, usize) {
    let m = seq1.len();
    let n = seq2.len();

    // Inizializza la tabella DP con 2 righe
    let mut dp = vec![vec![0; n + 1], vec![0; n + 1]];

    // Inizializza il punteggio massimo e la sua posizione
    let mut max_score = 0;
    let mut max_i = 0;
    let mut max_j = 0;

    // Inizializza la prima riga
    for j in 1..=n {
        dp[0][j] = std::cmp::max(0, dp[0][j - 1] + gap);
    }

    // Riempie la tabella DP e traccia il punteggio massimo
    for i in 1..=m {
        dp[1][0] = std::cmp::max(0, dp[0][0] + gap);

        for j in 1..=n {
            let match_mismatch = dp[0][j - 1]
                + if seq1[i - 1] == seq2[j - 1] {
                    match_score
                } else {
                    mismatch
                };

            let delete = dp[0][j] + gap;
            let insert = dp[1][j - 1] + gap;

            dp[1][j] = std::cmp::max(match_mismatch, std::cmp::max(delete, std::cmp::max(insert, 0)));

            // Traccia il punteggio massimo e la sua posizione
            if dp[1][j] > max_score {
                max_score = dp[1][j];
                max_i = i;
                max_j = j;
            }
        }

        // Scambia le righe usando una variabile temporanea
        dp.swap(0, 1);
    }

    (max_score, max_i, max_j)
}

fn main() {
    let x = "...";
    let y = "...";

    // Convertiamo le stringhe di DNA in vettori di u8
    let x_bytes = dna_to_bytes(&x[1..]);
    let y_bytes = dna_to_bytes(&y[1..]);

    // Calcoliamo l'allineamento
    let (score, max_i, max_j) = two_rows_alignment(&y_bytes, &x_bytes, 1, -1, -1);

    println!("Alignment Score: {}", score);
    println!("max_i: {}", max_i);
    println!("max_j: {}", max_j);
}

*/
